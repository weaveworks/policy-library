apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.containers-missing-security-context
spec:
  id: weave.policies.containers-missing-security-context
  name: Containers Missing Security Context
  enabled: true
  description: |
    This Policy checks if the container is missing securityContext while there is no securityContext defined on the Pod level as well. The security settings that are specified on the Pod level apply to all containers in the Pod.
  how_to_solve: |
    Make sure you secure your containers by specifying a `securityContext` whether on each container or on the Pod level. The security settings that you specify on the Pod level apply to all containers in the Pod.
    ```
    ...
      spec:
        securityContext:
          <securityContext attributes>
    ```
    https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  category: weave.categories.pod-security
  severity: high
  targets: {kinds: [Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.2.2.4
        - weave.controls.pci-dss.2.2.5
    - id: weave.standards.cis-benchmark
      controls:
        - weave.controls.cis-benchmark.5.2.6
    - id: weave.standards.mitre-attack
      controls:
        - weave.controls.mitre-attack.4.1
    - id: weave.standards.nist-800-190
      controls:
        - weave.controls.nist-800-190.3.3.1
    - id: weave.standards.gdpr
      controls:
        - weave.controls.gdpr.24
        - weave.controls.gdpr.25
        - weave.controls.gdpr.32
  tags: [pci-dss, cis-benchmark, mitre-attack, nist800-190, gdpr, default]
  parameters:
    - name: exclude_namespaces
      type: array
      required: false
      value: [kube-system]
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package weave.advisor.podSecurity.missing_security_context

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
    	isExcludedNamespace == false
    	not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
    	not controller_spec.securityContext	# Pod securityContext missing
    	some i
    	containers := controller_spec.containers[i]
    	not containers.securityContext	# Container securityContext missing
    	result = {
    		"issue detected": true,
    		"msg": sprintf("Container missing spec.template.spec.containers[%v].securityContext while Pod spec.template.spec.securityContext is not defined as well.", [i]),
    		"violating_key": "spec.template.spec.containers[%v]",
    	}
    }

    controller_input = input.review.object

    controller_spec = controller_input.spec.template.spec {
    	contains(controller_input.kind, {"StatefulSet", "DaemonSet", "Deployment", "Job", "ReplicaSet"})
    } else = controller_input.spec {
    	controller_input.kind == "Pod"
    } else = controller_input.spec.jobTemplate.spec.template.spec {
    	controller_input.kind == "CronJob"
    }

    contains(kind, kinds) {
    	kinds[_] = kind
    }

    isExcludedNamespace = true {
    	controller_input.metadata.namespace
    	controller_input.metadata.namespace in exclude_namespaces
    } else = false

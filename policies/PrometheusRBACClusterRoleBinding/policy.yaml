apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.prometheus-clusterrolebinding-has-incorrect-bindings
spec:
  id: weave.policies.prometheus-clusterrolebinding-has-incorrect-bindings
  name: Prometheus Clusterrolebinding Has Incorrect Bindings
  enabled: false
  description: "This Policy checks to see if the Prometheus Cluster Role Binding is bound to a `ClusterRole`, and is tied to a `ServiceAccount` name containing text of your choosing. The default policy is set for search for the Service Account name containing the word `prometheus`. \n"
  how_to_solve: "Ensure the subject name you specify in the Policy matches what you are deploying. \n```\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\n...\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n```\nhttps://kubernetes.io/docs/reference/access-authn-authz/rbac/\n"
  category: weave.categories.access-control
  severity: high
  targets: {kinds: [ClusterRoleBinding]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.7.1.1
        - weave.controls.pci-dss.7.1.2
    - id: weave.standards.hipaa
      controls:
        - weave.controls.hipaa.164.312.a.1
    - id: weave.standards.soc2-type-i
      controls:
        - weave.controls.soc2-type-i.1.6.3
  tags: [pci-dss, hipaa, soc2-type1]
  parameters:
    - name: prometheus_subject_name
      type: string
      required: true
      value: prometheus
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: "package weave.advisor.rbac.prometheus_server_clusterrolebrinding\n\nsubject_name := input.parameters.prometheus_subject_name\nexclude_label_key := input.parameters.exclude_label_key\nexclude_label_value := input.parameters.exclude_label_value\n\nvviolation[result] {\n  not exclude_label_value == crb_input.metadata.labels[exclude_label_key]\n  contains(crb_input.metadata.name, \"prometheus\")\n  some i\n  subjects = crb_input.subjects[i]\n  not subjects.kind == \"ServiceAccount\"\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"subject kind must be ServiceAccount; found '%v'\", [subjects.kind]),\n    \"violating_key\": sprintf(\"subjects[%v].kind\", [i])\n  }\n}\n\nviolation[result] {\n  not exclude_label_value == crb_input.metadata.labels[exclude_label_key]\n  contains(crb_input.metadata.name, \"prometheus\")\n  some i\n  subjects = crb_input.subjects[i]\n  not contains(subjects.name, subject_name)\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"subject name must contain '%v'; found '%v'\", [subject_name, subjects.name]),\n    \"violating_key\": sprintf(\"subjects[%v].name\", [i]),\n    \"recommended_value\": subject_name\n  }\n}\n\nviolation[result] {\n  not exclude_label_value == crb_input.metadata.labels[exclude_label_key]\n  contains(crb_input.metadata.name, \"prometheus\")\n  contains(crb_input.metadata.name, \"prometheus\")\n  not contains(crb_input.roleRef.kind, \"ClusterRole\")\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"roleRef kind must contain be a Role or ClusterRole; found '%v'\", [crb_input.roleRef.kind]),\n    \"violating_key\": \"roleRef.kind\"\n  }\n}\n\nviolation[result] {\n  not exclude_label_value == crb_input.metadata.labels[exclude_label_key]\n  contains(crb_input.metadata.name, \"prometheus\")\n  contains(crb_input.metadata.name, \"prometheus\")\n  not contains(crb_input.roleRef.name, \"prometheus\")\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"roleRef name must contain prometheus; found '%v'\", [crb_input.roleRef.name]),\n    \"violating_key\": \"roleRef.name\"\n  }\n}\n\ncrb_input = input.review.object {\n  contains_kind(input.review.object.kind, {\"ClusterRoleBinding\"})\n} \n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}"

apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.prometheus-rbac-prohibit-verbs
spec:
  id: weave.policies.prometheus-rbac-prohibit-verbs
  name: Prometheus Rbac Prohibit Verbs
  enabled: false
  description: "This Policy blocks certain verbs from being set for Prometheus RBAC. This Policy applies to RBAC names containing the word `prometheus`. \n"
  how_to_solve: "Check the `rules.verbs` for the verb(s) list and check the policy to see what value is set. \n```\nmetadata:\n  name: prometheus\n...\nrules:\n  - verbs:\n      - <prometheus_verb>\n```\n\nhttps://kubernetes.io/docs/reference/access-authn-authz/rbac/\n"
  category: weave.categories.access-control
  severity: high
  targets: {kinds: [ClusterRole]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.7.1.1
        - weave.controls.pci-dss.7.1.2
    - id: weave.standards.hipaa
      controls:
        - weave.controls.hipaa.164.312.a.1
    - id: weave.standards.soc2-type-i
      controls:
        - weave.controls.soc2-type-i.1.6.3
  tags: [pci-dss, hipaa, soc2-type1]
  parameters:
    - name: prometheus_verb
      type: string
      required: true
      value: put
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: "package weave.advisor.rbac.prometheus_server_clusterrole\n\nverb := input.parameters.prometheus_verb\nexclude_label_key := input.parameters.exclude_label_key\nexclude_label_value := input.parameters.exclude_label_value\n\nviolation[result] {\n  not exclude_label_value == cr_input.metadata.labels[exclude_label_key]\n  contains(cr_input.metadata.name, \"prometheus\")\n  some i, j\n  rules := cr_input.rules[i]\n  verbs := rules.verbs[j]\n  contains(verbs, verb)\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"Found unapproved verb '%v'\", [verb]),\n    \"violating_key\": sprintf(\"rules[%v].verbs[%v]\",[i,j])\n  }\n}\n\ncr_input = input.review.object {\n\tcontains_kind(input.review.object.kind, {\"ClusterRole\"})\n} \n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}\n"

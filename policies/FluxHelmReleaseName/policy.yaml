apiVersion: pac.weave.works/v2beta2
kind: Policy
metadata:
  name: weave.policies.helm-release-name-match-regex
spec:
  id: weave.policies.helm-release-name-regex
  name: Helm Release Name Must Match Regex
  enabled: true
  description: "The release name of a HelmRelease must match the regex pattern of '[A-z]{12}-[A-z]{12}'."
  how_to_solve: "Change the release name to match the regex pattern of '[A-z]{12}-[A-z]{12}'."
  category: weave.categories.security
  severity: high
  targets: {kinds: [HelmRelease]}
  tags: [flux]
  parameters:
    - name: exclude_namespaces
      type: array
      required: false
      value:
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package helm_release_name_regex

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
        isExcludedNamespace == false
        not re_match(`[A-z]{12}-[A-z]{12}`, controller_input.metadata.name)
        not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
        result = {
            "issue detected": true,
            "msg": sprintf("The HelmRelease name must match the regex pattern '[A-z]{12}-[A-z]{12}'; found '%s'", [controller_input.metadata.name]),
            "violating_key": "metadata.name"
        }
    }

    # Controller input
    controller_input = input.review.object

    contains_kind(kind, kinds) {
      kinds[_] = kind
    }

    isExcludedNamespace = true {
      controller_input.metadata.namespace
      controller_input.metadata.namespace in exclude_namespaces
    } else = false


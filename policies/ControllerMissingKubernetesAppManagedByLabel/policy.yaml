apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.missing-kubernetes-app-managed-by-label
spec:
  id: weave.policies.missing-kubernetes-app-managed-by-label
  name: Missing Kubernetes App Managed By Label
  enabled: false
  description: "Custom labels can help enforce organizational standards for each artifact deployed. This Policy ensure a custom label key is set in the entity's `metadata`. The Policy detects the presence of the following: \n\n### owner\nA label key of `owner` will help identify who the owner of this entity is. \n\n### app.kubernetes.io/name\nThe name of the application\t\n\n### app.kubernetes.io/instance\nA unique name identifying the instance of an application\t  \n\n### app.kubernetes.io/version\nThe current version of the application (e.g., a semantic version, revision hash, etc.)\n\n### app.kubernetes.io/part-of\nThe name of a higher level application this one is part of\t\n\n### app.kubernetes.io/managed-by\nThe tool being used to manage the operation of an application\t\n\n### app.kubernetes.io/created-by\nThe controller/user who created this resource\t\n"
  how_to_solve: "Add these custom labels to `metadata`.\n* owner\n* app.kubernetes.io/name\n* app.kubernetes.io/instance\n* app.kubernetes.io/version\n* app.kubernetes.io/name\n* app.kubernetes.io/part-of\n* app.kubernetes.io/managed-by\n* app.kubernetes.io/created-by\n\n```\nmetadata:\n  labels:\n    <label>: value\n```  \nFor additional information, please check\n* https://kubernetes.io/docs/concepts/overview/working-with-objects/common-labels \n"
  category: weave.categories.organizational-standards
  severity: low
  targets: {kinds: [Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob]}
  tags: []
  parameters:
    - name: exclude_namespaces
      type: array
      required: false
      value:
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package weave.advisor.labels.missing_kubernetes_app_managed_by_label

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
      isExcludedNamespace == false
      not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
      label := "app.kubernetes.io/managed-by"
      # Filter the type of entity before moving on since this shouldn't apply to all entities
      contains_kind(controller_input.kind, {"StatefulSet" , "DaemonSet", "Deployment", "Job"})
      not controller_input.metadata.labels[label]
      result = {
        "issue detected": true,
        "msg": sprintf("Missing '%v' label", [label]),
        "violating_key": "metadata.labels",
        "recommended_value": label
      }
    }

    # Controller input
    controller_input = input.review.object

    contains_kind(kind, kinds) {
      kinds[_] = kind
    }

    isExcludedNamespace = true {
    	controller_input.metadata.namespace
    	controller_input.metadata.namespace in exclude_namespaces
    } else = false

name: Container running as user
description: |
  Containers has a feature in which you specify the ID of the user which all processes in the container will run with. This Policy enforces that the `securityContext.runAsUser` attribute is set to a uid greater than root uid. Running as root user gives the container full access to all resources in the VM it is running on. Containers should not run with such access rights unless required by design. 
risks: |
  If containers are running as root within your Kubernetes cluster, and that container is somehow compromised, an attacker could potentially have root privileges on the host that the container is running on. With root privileges at the host level, an attacker can launch a number of additional processes to do whatever they want. Manually enforcing the usage of a user that isnâ€™t root within your containers can become an impossible feat.  Enabling this Policy your deployments are setting a proper user ID so that no containers can be run as root. 
how_to_solve: |
  You should set `securityContext.runAsUser` uid to something greater than root uid. Not setting it will default to giving the container root user rights on the VM that it is running on. 
  ```
  ...
    spec:
      securityContext:
        runAsUser: <uid>
  ```
  https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
category: magalix.categories.pod-security
severity: high
targets: [
  "Deployment",
  "Job",
  "ReplicationController",
  "ReplicaSet",
  "DaemonSet",
  "StatefulSet",
  "CronJob",
]
controls:
- magalix.controls.pci-dss.2.2.4
- magalix.controls.pci-dss.2.2.5 
- magalix.controls.cis-benchmark.5.2.6
- magalix.controls.mitre-attack.4.1
- magalix.controls.nist-800-190.3.3.1
- magalix.controls.gdpr.24
- magalix.controls.gdpr.25
- magalix.controls.gdpr.32
tags: [
  "pci-dss",
  "cis-benchmark",
  "mitre-attack",
  "nist800-190",
  "gdpr",
  "default",
]
exclusions:
- namespaces
- labels
auto_remedy: false
parameters:
- default: 0
  name: uid
  required: true
  type: integer
- default: kube-system
  name: exclude_namespace
  required: false
  type: string
- default: 
  name: exclude_label_key
  required: false
  type: string
- default: 
  name: exclude_label_value
  required: false
  type: string
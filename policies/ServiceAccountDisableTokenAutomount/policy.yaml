apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.disable-service-account-token-automount-in-specific-namespace
spec:
  id: weave.policies.disable-service-account-token-automount-in-specific-namespace
  name: Disable ServiceAccount Token Automount In Specific Namespace
  enabled: true
  description: "This Policy allows you to enforce the enabling or disabling the automounting of service account tokens. \n\nWhen a pod is created without a service account defined, the default service account within the same namespace will be assigned automatically. \n\nThis is a security concern because a kubernetes client can load a container's service account token. With that token a compromoised contaienr can then access the Kubernetes API to perform actions such as creating and deleting pods.\n\nIn version 1.6+, you can opt out of automounting API credentials for a service account by setting automountServiceAccountToken: false on the service account.\n"
  how_to_solve: "Add the key:value pair `automountServiceAccountToken: false` to your Service Account declaration. \n```\nkind: ServiceAccount\nautomountServiceAccountToken: false\n```\n\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server\n"
  category: weave.categories.access-control
  severity: high
  targets: {kinds: [ServiceAccount]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.7.1.1
    - id: weave.standards.cis-benchmark
      controls:
        - weave.controls.cis-benchmark.5.1.6
    - id: weave.standards.mitre-attack
      controls:
        - weave.controls.mitre-attack.6.3
    - id: weave.standards.hipaa
      controls:
        - weave.controls.hipaa.164.312.a.2.i
        - weave.controls.hipaa.164.312.a.1
    - id: weave.standards.gdpr
      controls:
        - weave.controls.gdpr.25
        - weave.controls.gdpr.32
        - weave.controls.gdpr.24
    - id: weave.standards.soc2-type-i
      controls:
        - weave.controls.soc2-type-i.1.6.3
  tags: [pci-dss, cis-benchmark, mitre-attack, hipaa, gdpr, default, soc2-type1]
  parameters:
    - name: automount
      type: boolean
      required: true
      value: false
    - name: namespace
      type: string
      required: true
      value: default
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: "package weave.advisor.sa.disable_default_service_account_token_automount\n\nautomount_value = input.parameters.automount\nnamespace = input.parameters.namespace\nexclude_label_key := input.parameters.exclude_label_key\nexclude_label_value := input.parameters.exclude_label_value\n\nviolation[result] {\n  not exclude_label_value == sa_input.metadata.labels[exclude_label_key]\n  sa_input.metadata.name == \"default\"\n  namespace == sa_input.metadata.namespace\n  automount := sa_input\n  not has_key(automount, \"automountServiceAccountToken\")\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"'automountServiceAccountToken' must be set; found '%v'\",[automount]),\n    \"violating_key\": \"\"\n  }\n}\n\nviolation[result] {\n  not exclude_label_value == sa_input.metadata.labels[exclude_label_key]\n  sa_input.metadata.name == \"default\"\n  namespace == sa_input.metadata.namespace\n  automount := sa_input.automountServiceAccountToken\n  not automount_value = automount\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"automountServiceAccountToken must be set to '%v'; found '%v'\",[automount_value, automount]),\n    \"violating_key\":\"automountServiceAccountToken\",\n    \"recommended_value\": automount_value\n  }\n}\n\nhas_key(x, k) { \n  type_name(x[k])\n}\n\nsa_input = input.review.object {\n  contains_kind(input.review.object.kind, {\"ServiceAccount\"})\n}\n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}"

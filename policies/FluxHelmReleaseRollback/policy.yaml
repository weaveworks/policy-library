apiVersion: pac.weave.works/v2beta2
kind: Policy
metadata:
  name: weave.policies.helm-release-rollback-should-be-disabled
spec:
  id: weave.policies.helm-release-rollback
  name: Helm Release Rollback Should Be Disabled
  enabled: true
  description: "The rollback feature of a HelmRelease should be disabled."
  how_to_solve: "Set the rollback feature of the HelmRelease to false."
  category: weave.categories.security
  severity: high
  targets: {kinds: [HelmRelease]}
  tags: [flux]
  parameters:
    - name: exclude_namespaces
      type: array
      required: false
      value:
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package weave.advisor.helm_release_rollback

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
        isExcludedNamespace == false
    	controller_spec.rollback.enable == true
        not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
        result = {
            "issue detected": true,
            "msg": "The HelmRelease rollback must be disabled; found 'true'",
            "recommended_value": false,
            "violating_key": "spec.rollback.enable"
        }
    }

    # Controller input
    controller_input = input.review.object

    # controller_container acts as an iterator to get containers from the template
    controller_spec = controller_input.spec {
      controller_input.kind == "HelmRelease"
    }

    contains_kind(kind, kinds) {
      kinds[_] = kind
    }

    isExcludedNamespace = true {
      controller_input.metadata.namespace
      controller_input.metadata.namespace in exclude_namespaces
    } else = false

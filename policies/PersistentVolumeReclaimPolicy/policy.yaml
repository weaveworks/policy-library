apiVersion: pac.weave.works/v2beta1
kind: Policy
metadata:
  name: weave.policies.persistent-volume-reclaim-policy-should-be-set-to-retain
spec:
  id: weave.policies.persistent-volume-reclaim-policy-should-be-set-to-retain
  name: Persistent Volume Reclaim Policy Should Be Set To Retain
  enabled: false
  description: |
    This Policy checks to see whether or not the persistent volume reclaim policy is set.

    PersistentVolumes can have various reclaim policies, including "Retain", "Recycle", and "Delete". For dynamically provisioned PersistentVolumes, the default reclaim policy is "Delete". This means that a dynamically provisioned volume is automatically deleted when a user deletes the corresponding PersistentVolumeClaim. This automatic behavior might be inappropriate if the volume contains precious data. In that case, it is more appropriate to use the "Retain" policy. With the "Retain" policy, if a user deletes a PersistentVolumeClaim, the corresponding PersistentVolume is not be deleted. Instead, it is moved to the Released phase, where all of its data can be manually recovered.
  how_to_solve: "Check your reclaim policy configuration within your PersistentVolume configuration. \n```\nspec:\n  persistentVolumeReclaimPolicy: <pv_policy>\n```\n\nhttps://kubernetes.io/docs/tasks/administer-cluster/change-pv-reclaim-policy/#why-change-reclaim-policy-of-a-persistentvolume\n"
  category: weave.categories.data-protection
  severity: medium
  targets: {kinds: [PersistentVolume]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.3.1
    - id: weave.standards.soc2-type-i
      controls:
        - weave.controls.soc2-type-i.2.1.2
  tags: [pci-dss, soc2-type1]
  parameters:
    - name: pv_policy
      type: string
      required: true
      value: Retain
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |+
    package weave.advisor.storage.persistentvolume_reclaim_policy

    policy := input.parameters.pv_policy
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
      pv_policy := storage_spec.persistentVolumeReclaimPolicy
      not pv_policy == policy
      result = {
        "issue detected": true,
        "msg": sprintf("persistentVolumeReclaimPolicy must be '%v'; found '%v'", [policy, pv_policy]),
        "violating_key": "spec.persistentVolumeReclaimPolicy",
        "recommened_value": policy
      }
    }

    # controller_container acts as an iterator to get containers from the template
    storage_spec = input.review.object.spec {
      contains_kind(input.review.object.kind, {"PersistentVolume"})
    }

    contains_kind(kind, kinds) {
      kinds[_] = kind
    }


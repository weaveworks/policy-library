apiVersion: weaveworks.com/v1
kind: Policy
metadata:
  name: magalix.policies.enforce-specific-ingress-class
spec:
  enable: true
  name: magalix.policies.enforce-specific-ingress-class
  description: |
    This Policy allows for a custom Ingress annotation key and value. When using Kubernetes Ingress, various annotation can be used to define different configurations, even different ingress controllers. Values may vary depending on your use case. 
  how_to_solve: |
    ```
    metadata:
      annotations:
        kubernetes.io/ingress.class: <class>
    ```
    https://kubernetes.io/docs/concepts/services-networking/ingress/
  category: magalix.categories.network-security
  severity: medium
  controls:
  - magalix.controls.pci-dss.1.1.4
  parameters:
  - name: class
    type: string
    required: true
    default:
  - name: annotation
    type: string
    required: true
    default:
  - name: exclude_namespace
    type: string
    required: false
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.ingress.ingress_class\n\nannotation  := input.parameters.annotation\n\
    class := input.parameters.class\nexclude_namespace := input.parameters.exclude_namespace\n\
    exclude_label_key := input.parameters.exclude_label_key\nexclude_label_value :=\
    \ input.parameters.exclude_label_value\n\nviolation[result] {\n  not exclude_namespace\
    \ == ingress_input.metadata.namespace\n  not exclude_label_value == ingress_input.metadata.labels[exclude_label_key]\n\
    \  ingress_annotation := ingress_input.metadata.annotations\n  not has_key(ingress_annotation,\
    \ annotation)\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"\
    Ingress is missing the annoation '%v'\", [annotation]),\n    \"violating_key\"\
    : \"metadata.annotations\"\n  }\n}\n\nviolation[result] {\n  not exclude_namespace\
    \ == ingress_input.metadata.namespace\n  not exclude_label_value == ingress_input.metadata.labels[exclude_label_key]\n\
    \  ingress_class:= ingress_input.metadata.annotations[annotation]\n  not ingress_class\
    \ == class\n  result = {\n    \"issue detected\": true,\n    \"msg\": sprintf(\"\
    Ingress class should '%v'; found '%v' \", [class, ingress_class]),\n    \"violating_key\"\
    : \"metadata.annotations\",\n    \"recommended_value\": class\n    \n  }\n}\n\n\
    has_key(x, k) { \n  type_name(x[k])\n}\n\n\ningress_input = input.review.object\
    \ {\n\tcontains_kind(input.review.object.kind, {\"Ingress\"})\n}\n\ncontains_kind(kind,\
    \ kinds) {\n  kinds[_] = kind\n}"

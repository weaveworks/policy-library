apiVersion: magalix.com/v1
kind: Policy
metadata:
  name: magalix.templates.persistent-volume-claim-max-size
spec:
  id: magalix.templates.persistent-volume-claim-max-size
  name: Persistent Volume Claim Max Size
  description: |
    This Policy allows you to set a max size on your Persistent Volumes Claims. When specifying a size, be sure to include the size and sizing suffix (e.g. 1Gi).
  how_to_solve: |
    Ensure the max size (e.g. 5Gi) on your persistent volume claim is no larger than what is specified in the Policy. 
    ```
    spec:
      resources:
        requests:
          storage: <size>
    ```
  category: magalix.categories.capacity-management
  severity: medium
  controls:
  - magalix.controls.soc2-type-1.2.1.1
  parameters:
  - name: size
    type: string
    required: true
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.storage.persistentvolumeclaim_max_size\n\nmax_size\
    \ := input.parameters.size\nexclude_label_key := input.parameters.exclude_label_key\n\
    exclude_label_value := input.parameters.exclude_label_value\n\nviolation[result]\
    \ {\n  not exclude_label_value == controller_input.metadata.labels[exclude_label_key]\n\
    \  storage_value := storage_spec.resources.requests.storage\n  unit_type_value\
    \ := units.parse_bytes(storage_value)\n  unit_max_value := units.parse_bytes(max_size)\n\
    \  unit_max_value < unit_type_value\n  result = {\n    \"issue detected\": true,\n\
    \    \"msg\": sprintf(\"Storage must be a maximum of '%v'; found '%v'\", [max_size,\
    \ storage_value]),\n    \"violating_key\": \"spec.spec.resources.requests.storage\"\
    \n  }\n}\n\n# Controller input\ncontroller_input = input.review.object\n\n# controller_container\
    \ acts as an iterator to get containers from the template\nstorage_spec = controller_input.spec\
    \ {\n  contains_kind(controller_input.kind, {\"PersistentVolumeClaim\"})\n}\n\n\
    contains_kind(kind, kinds) {\n  kinds[_] = kind\n}\n"

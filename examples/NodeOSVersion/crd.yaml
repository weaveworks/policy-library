apiVersion: weaveworks.com/v1
kind: Policy
metadata:
  name: magalix.policies.node-os-version
spec:
  enable: true
  name: magalix.policies.node-os-version
  description: |
    This Policy allows enforcement of the type of OS image used for each node. Build consistency throughout your cluster by provisioning the same OS version across all the nodes. 
  how_to_solve: |
    When provisioning new Kubernetes nodes, ensure your provisiong process specifies an operating system that is equal to the OS Image listed in the Policy. 
    ```
    status:
      nodeInfo:
        osImage: <os>
    ```
  category: magalix.categories.organizational-standards
  severity: medium
  parameters:
  - name: os
    type: string
    required: true
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.nodes.os_version\n\ndesired_os := input.parameters.os\n\
    exclude_label_key := input.parameters.exclude_label_key\nexclude_label_value :=\
    \ input.parameters.exclude_label_value\n\nviolation[result] {\n  not exclude_label_value\
    \ == node_metadata.labels[exclude_label_key]\n  current_os := node_status.nodeInfo.osImage\n\
    \  not current_os == desired_os\n  result = {\n    \"issue detected\": true,\n\
    \    \"msg\": sprintf(\"Node OS should be'%v'; found %v\", [desired_os, current_os]),\n\
    \    \"violating_key\": \"status.nodeInfo.osImage\"\n  }\n}\n\nnode_metadata =\
    \ input.review.object.metadata {\n  contains_kind(input.review.object.kind, {\"\
    Node\"})\n}\n\nnode_status = input.review.object.status {\n  contains_kind(input.review.object.kind,\
    \ {\"Node\"})\n}\n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}"

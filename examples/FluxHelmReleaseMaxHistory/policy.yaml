apiVersion: pac.weave.works/v2beta2
kind: Policy
metadata:
  name: weave.policies.helm-release-max-history
spec:
  id: weave.policies.helm-release-max-history
  name: Helm Release Max History
  enabled: true
  description: "HelmRelease maxHistory cannot exceed the specified value."
  how_to_solve: "Set the maxHistory of the HelmRelease to a value less than or equal to the specified limit."
  category: weave.categories.configuration
  severity: medium
  targets:
    kinds: [HelmRelease]
  tags: [flux]
  parameters:
    - name: max_history
      type: integer
      required: true
      value: 100
    - name: exclude_namespaces
      type: array
      required: false
      value: []
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package weave.advisor.helm_release_max_history

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value
    max_history := input.parameters.max_history

    violation[result] {
        isExcludedNamespace == false
        not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
        max_history_value := controller_spec.maxHistory
        max_history_value > max_history
        result = {
            "issue detected": true,
            "msg": sprintf("The HelmRelease '%s' maxHistory cannot exceed %d; found %d", [controller_input.metadata.name, max_history, max_history_value]),
            "violating_key": "spec.maxHistory",
            "recommended_value": max_history
        }
    }

    controller_input = input.review.object

    controller_spec = controller_input.spec {
      controller_input.kind == "HelmRelease"
    }

    isExcludedNamespace = true {
      controller_input.metadata.namespace
      controller_input.metadata.namespace in exclude_namespaces
    } else = false



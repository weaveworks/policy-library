apiVersion: magalix.com/v1
kind: Policy
metadata:
  name: magalix.policies.containers-are-missing-a-controller-spec-key
spec:
  name: magalix.policies.containers-are-missing-a-controller-spec-key
  description: |
    This Policy will allow you to set your own Policies for the Pod spec. 
  how_to_solve: |
    Ensure the key you have specified in your constraint exists in your workloads. 
    ```
    ...
      spec:
        <controller_spec_key>
    ```
  category: magalix.categories.organizational-standards
  severity: medium
  parameters:
  - name: controller_spec_key
    type: string
    required: true
    default:
  - name: exclude_namespace
    type: string
    required: false
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.pods.controller_spec_generic\n\nkey := input.parameters.controller_spec_key\n\
    exclude_namespace := input.parameters.exclude_namespace\nexclude_label_key :=\
    \ input.parameters.exclude_label_key\nexclude_label_value := input.parameters.exclude_label_value\n\
    \nviolation[result] {\n  not exclude_namespace == controller_input.metadata.namespace\n\
    \  not exclude_label_value == controller_input.metadata.labels[exclude_label_key]\n\
    \  not controller_spec[key]\n  result = {\n    \"issue detected\": true,\n   \
    \ \"msg\": sprintf(\"Missing spec '%v'\", [key]),\n    \"violating_key\": \"spec.template.spec\"\
    \n  }\n}\n\n# Controller input\ncontroller_input = input.review.object\n\n# controller_container\
    \ acts as an iterator to get containers from the template\ncontroller_spec = controller_input.spec.template.spec\
    \ {\n  contains_kind(controller_input.kind, {\"StatefulSet\" , \"DaemonSet\",\
    \ \"Deployment\", \"Job\"})\n} else = controller_input.spec {\n  controller_input.kind\
    \ == \"Pod\"\n} else = controller_input.spec.jobTemplate.spec.template.spec {\n\
    \  controller_input.kind == \"CronJob\"\n}\n\ncontains_kind(kind, kinds) {\n \
    \ kinds[_] = kind\n}"

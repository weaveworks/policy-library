apiVersion: pac.weave.works/v2beta2
kind: Policy
metadata:
  name: weave.templates.resource-quota-setting-is-missing
spec:
  id: weave.templates.resource-quota-setting-is-missing
  name: Resource Quota Setting Is Missing
  description: |
    When creating resource quotas per namespace, ensure CPU and Memory requests and limits are set.
  how_to_solve: "Declare values for CPU & Memory requests and limits.  \n```\nspec:\n  hard:\n    requests.cpu: <size>\n    requests.memory: <size>\n    limits.cpu: <size>\n    limits.memory: <size>\n```\nhttps://kubernetes.io/docs/tasks/administer-cluster/manage-resources/quota-memory-cpu-namespace/\n"
  category: weave.categories.capacity-management
  severity: medium
  standards:
    - id: weave.standards.soc2-type-i
      controls:
        - weave.controls.soc2-type-i.2.1.1
  tags: [soc2-type1]
  parameters:
    - name: resource_type
      type: string
      required: true
      value:
    - name: namespace
      type: string
      required: true
      value: magalix
  code: "package weave.advisor.namespace.resource_quotas\n\nresource_type := input.parameters.resource_type\nnamespace := input.parameters.namespace\n\nviolation[result] {\n  rq_namespace := input.review.object.metadata.namespace\n  rq_namespace == namespace\n  not rq_spec.hard[resource_type]\n  result = {\n  \t\"issue_detected\": true,\n    \"msg\": sprintf(\"You are missing '%v'\", [resource_type]),\n    \"violating_key\": \"spec.hard\"\n  }\n}\n\nrq_spec = input.review.object.spec{\n  contains_kind(input.review.object.kind, {\"ResourceQuota\"})\n} \n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}\n"

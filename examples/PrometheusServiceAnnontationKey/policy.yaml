apiVersion: pac.weave.works/v2beta2
kind: Policy
metadata:
  name: weave.templates.enforce-prometheus-service-annotation-key
spec:
  id: weave.templates.enforce-prometheus-service-annotation-key
  name: Enforce Prometheus Service Annotation Key
  description: "This Policy checks to see if Services have the specified Prometheus annotations like  `prometheus.io/scrape` and `filter.by.port.name`. These annotations are used to send metric data to your Prometheus instance. \n"
  how_to_solve: |
    ```
    kind: Service
    metadata:
      annotations:
        <prometheus_service_annotation>: value
    ```

    https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config
  category: weave.categories.observability
  severity: medium
  parameters:
    - name: prometheus_service_annotation
      type: string
      required: true
      value:
    - name: exclude_namespaces
      type: array
      required: false
      value:
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: "package weave.advisor.annotations.prometheus_service\n\nimport future.keywords.in\n\nannotation := input.parameters.prometheus_service_annotation\nexclude_namespaces := input.parameters.exclude_namespaces\nexclude_label_key := input.parameters.exclude_label_key\nexclude_label_value := input.parameters.exclude_label_value\n\nviolation[result] {\n  isExcludedNamespace == false\n  not exclude_label_value == service_input.metadata.labels[exclude_label_key]\n  not service_input.metadata.annotations[annotation]\n  result = {\n    \"issue_detected\": true,\n    \"msg\": sprintf(\"Annotation must contain '%v'; found '%v'\", [annotation, service_input.metadata.annotations]),\n    \"violating_key\": \"metadata.annotations\"\n  }\n}\n\nservice_input = input.review.object {\n\tcontains_kind(input.review.object.kind, {\"Service\"})\n} \n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n}\n\nisExcludedNamespace = true {\n\tservice_input.metadata.namespace\n\tservice_input.metadata.namespace in exclude_namespaces\n} else = false\n"

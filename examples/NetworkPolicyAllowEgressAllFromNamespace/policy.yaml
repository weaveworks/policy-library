apiVersion: magalix.com/v1
kind: Policy
metadata:
  name: magalix.policies.network-allow-all-egress-traffic-from-namespace
spec:
  name: magalix.policies.network-allow-all-egress-traffic-from-namespace
  description: |
    If you are using a CNI that allows for Network Policies, you can use this Policy to block all Ingress traffic from a specified namespace. 

    By default, if no policies exist in a namespace, then all ingress and egress traffic is allowed to and from pods in that namespace. 
  how_to_solve: |
    Validate your use case and check network policies for traffic blocking. 

    https://kubernetes.io/docs/concepts/services-networking/network-policies/
  category: magalix.categories.network-security
  severity: medium
  controls:
  - magalix.controls.pci-dss.1.2.1
  - magalix.controls.soc2-type-1.1.6.1
  parameters:
  - name: namespace
    type: string
    required: true
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.network.allow.egress.from.namespace\n\nnamespace\
    \ := input.parameters.namespace\nexclude_label_key := input.parameters.exclude_label_key\n\
    exclude_label_value := input.parameters.exclude_label_value\n\nviolation[result]\
    \ {\n  not exclude_label_value == np_input.metadata.labels[exclude_label_key]\n\
    \  namespace == np_input.metadata.namespace\n  not np_input.spec.egress == [{}]\n\
    \  result = {\n    \"issue_detected\": true,\n    \"msg\": sprintf(\"spec.egress\
    \ should be '[]'; %v was detected\", [np_input.spec.egress]),\n    \"violating_key\"\
    : \"spec.egress\"\n  }\n}\n\nnp_input = input.review.object {\n  contains_kind(input.review.object.kind,\
    \ {\"NetworkPolicy\"})\n}\n\ncontains_kind(kind, kinds) {\n  kinds[_] = kind\n\
    }"

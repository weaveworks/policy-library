apiVersion: weaveworks.com/v1
kind: Policy
metadata:
  name: magalix.policies.node-missing-label
spec:
  enable: true
  name: magalix.policies.node-missing-label
  description: |
    This Policy only looks for specific node label keys.

    Important node labels include:
    ### kubernetes.io/hostname
    The Kubelet populates this label with the hostname. Note that the hostname can be changed from the "actual" hostname by passing the --hostname-override flag to the kubelet.

    ### kubernetes.io/arch
    The Kubelet populates this with runtime.GOARCH as defined by Go. This can be handy if you are mixing arm and x86 nodes.

    ### node.kubernetes.io/instance-type
    The Kubelet populates this with the instance type as defined by the cloudprovider. This will be set only if you are using a cloudprovider. This setting is handy if you want to target certain workloads to certain instance types, but typically you want to rely on the Kubernetes scheduler to perform resource-based scheduling. You should aim to schedule based on properties rather than on instance types (for example: require a GPU, instead of requiring a g2.2xlarge).

    ### kubernetes.io/os
    The Kubelet populates this with runtime.GOOS as defined by Go. This can be handy if you are mixing operating systems in your cluster (for example: mixing Linux and Windows nodes).

    ### topology.kubernetes.io/zone
    The kubelet or the external cloud-controller-manager populates this with the information as provided by the cloudprovider. This will be set only if you are using a cloudprovider. However, you should consider setting this on nodes if it makes sense in your topology.
  how_to_solve: |
    Ensure the label is as specified in the Policy. 
    ```
    metadata: 
      labels: 
        <key>: value
    ```
    https://kubernetes.io/docs/reference/labels-annotations-taints/
  category: magalix.categories.organizational-standards
  severity: low
  controls:
  - magalix.controls.nist-800-190.4.5.1
  parameters:
  - name: node_label
    type: string
    required: true
    default:
  - name: exclude_label_key
    type: string
    required: false
    default:
  - name: exclude_label_value
    type: string
    required: false
    default:
  code: "package magalix.advisor.nodes.label\n\nlabel := input.parameters.node_label\n\
    exclude_label_key := input.parameters.exclude_label_key\nexclude_label_value :=\
    \ input.parameters.exclude_label_value\n\nviolation[result] {\n  not exclude_label_value\
    \ == node_metadata.labels[exclude_label_key]\n\tnode_labels := node_metadata.labels\n\
    \tnot node_labels[label]\n  result = {\n    \"issue detected\": true,\n    \"\
    msg\": sprintf(\"Node is missing label '%v'; found %v\", [label, node_metadata.labels]),\n\
    \    \"violating_key\": \"metadata.labels\"\n  }\n}\n\nnode_metadata = input.review.object.metadata\
    \ {\n  contains_kind(input.review.object.kind, {\"Node\"})\n}\n\ncontains_kind(kind,\
    \ kinds) {\n  kinds[_] = kind\n}"

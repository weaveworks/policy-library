controls:
- description: This section consists of security recommendations for the direct configuration
    of Kubernetes control plane processes. These recommendations may not be directly
    applicable for cluster operators in environments where these components are managed
    by a 3rd party.
  dev_id: 0a30e181-15ef-4353-9986-3766c5f2ddc4
  id: dc09ad08-6367-4a5d-9e90-2d7cae2a5016
  name: Control Plane Components
  order: 1
  prod_id: 78b6aeee-9fcb-42a6-ba45-941985b9d46d
- description: This section covers recommendations for etcd configuration.
  dev_id: b187fd1c-de97-44ee-9af0-4c24ab862b65
  id: 7c624f63-5f25-48fd-b0dc-1780856d2884
  name: etcd Controls
  order: 2
  prod_id: d745172b-9349-414c-8f64-3a842dd3ae73
- description: This section contains recommendations for cluster-wide areas, such
    as authentication and logging. Unlike section 1 these recommendations should apply
    to all deployments.
  dev_id: 74d73ec8-e679-483c-9507-af5d34ad4645
  id: 8cba52b7-e0c2-4444-9da7-6cffa0033fd7
  name: Control Plane Configuration
  order: 3
  prod_id: dcc467ea-4f40-4c8c-af58-7cab059fdb20
- description: This section consists of security recommendations for the components
    that run on Kubernetes worker nodes. Note that these components may also run on
    Kubernetes control plane nodes, so the recommendations in this section should
    be applied to control plane nodes as well as worker nodes where the control plane
    nodes make use of these components.
  dev_id: 0e4b75dc-4c53-4855-942f-74599513e175
  id: 689eb5c3-d4a9-480a-92f2-b4cf1e69da51
  name: Worker Nodes
  order: 4
  prod_id: 13e46f70-aec6-4232-ad37-ea2fed705e86
- description: This section contains recommendations for various Kubernetes policies
    which are important to the security of the environment.
  dev_id: ffa51a2c-c74e-4df3-94b8-d3e40de4edf1
  id: b071a3db-717c-4eed-8c5d-8754aa492705
  name: Policies
  order: 5
  prod_id: 2ca2b0d3-efa0-40fd-b7c2-201a79c2b94d
- description: The RBAC role `cluster-admin` provides wide-ranging powers over the
    environment and should be used only where and when needed.
  dev_id: 4511f612-d6db-490b-a279-0e5c90f5fe53
  id: df34bdfd-49a7-42a5-8650-2b964b80b806
  name: Ensure that the cluster-admin role is only used where required
  order: 5.1.1
  prod_id: 39bff9e8-a363-4b3a-a69b-b993cd81e53a
- description: 'Kubernetes Roles and ClusterRoles provide access to resources based
    on sets of objects and actions that can be taken on those objects. It is possible
    to set either of these to be the wildcard "*" which matches all items.


    Use of wildcards is not optimal from a security perspective as it may allow for
    inadvertent access to be granted when new resources are added to the Kubernetes
    API either as CRDs or in later versions of the product.

    '
  dev_id: b8398465-fcb6-4ba9-a9a1-7f1419de9e0f
  id: b7d09d41-21d6-4cb6-a53f-38b97d953137
  name: Minimize wildcard use in Roles and ClusterRoles
  order: 5.1.3
  prod_id: 62575ca6-d008-43fb-9d2b-e59c48dcd677
- description: The ability to create pods in a namespace can provide a number of opportunities
    for privilege escalation, such as assigning privileged service accounts to these
    pods or mounting hostPaths with access to sensitive data (unless Pod Security
    Policies are implemented to restrict this access). As such, access to create new  pods
    should be restricted to the smallest possible group of users.
  dev_id: 20b81072-3afa-4323-8eb7-2f99e51a9865
  id: 81a73847-0fa3-4528-9608-84a6708d4fc4
  name: Minimize access to create pods
  order: 5.1.4
  prod_id: 8f861e99-6ed4-461e-80c4-d4d80ac2d109
- description: The `default` service account should not be used to ensure that rights
    granted to applications can be more easily audited and reviewed.
  dev_id: ad3ea906-5097-4fb2-9079-da179b91333c
  id: ff5543a3-4cfa-4941-8b1f-02f05b5a8488
  name: Ensure that default service accounts are not actively used
  order: 5.1.5
  prod_id: 3dcbc318-dad4-43dd-97c8-c228595fde54
- description: Service accounts tokens should not be mounted in pods except where
    the workload running in the pod explicitly needs to communicate with the API server.
  dev_id: 99244521-0e94-45c1-9fe8-d2162addfcf0
  id: 77775c6a-26d3-4abc-964d-6fa390c51985
  name: Ensure that Service Account Tokens are only mounted where necessary
  order: 5.1.6
  prod_id: 01fa6a9d-6296-4eab-8578-2cd5385c7529
- description: A Pod Security Policy (PSP) is a cluster-level resource that controls
    security settings for pods.
  dev_id: c5934987-769d-45c7-905f-5499fda26b2c
  id: 1636b342-91f5-492a-9720-a67682bbe31a
  name: Pod Security Policies
  order: 5.2
  prod_id: 374d527e-c5a8-42e5-b83c-3b687c3ddaa4
- description: Do not generally permit containers to be run with the `securityContext.privileged`
    flag set to `true`.
  dev_id: bd89d537-a147-4feb-bfbf-db47ca57b9d8
  id: 79e6e841-721b-49a5-b263-896a4e5151d8
  name: Minimize the admission of privileged containers
  order: 5.2.1
  prod_id: 549b404c-b621-4af4-8ea7-b8b9fe28e8b7
- description: Do not generally permit containers to be run with the `hostIPC` flag
    set to `true`.
  dev_id: 1709f190-a025-4091-96ea-0da57379fde9
  id: fcef3595-b0da-4ee6-b50d-66a9dc684a53
  name: Minimize the admission of containers wishing to share the host IPC namespace
  order: 5.2.3
  prod_id: 08c89600-f3fe-45ae-a069-cb2cb176273e
- description: Do not generally permit containers to be run with the `hostNetwork`
    flag set to `true`.
  dev_id: aef01c0a-82e9-4d69-8ad6-14465f2dc6af
  id: ae29d9d4-70b5-4f30-93d2-07b2c59cda05
  name: Minimize the admission of containers wishing to share the host network namespace
  order: 5.2.4
  prod_id: 84d0a4b9-6baa-4fb9-bb5b-4d559bd5da0d
- description: Do not generally permit containers to be run with the allowPrivilegeEscalation
    flag set to true.
  dev_id: f786de03-b43b-4422-a815-f1c49ca80fff
  id: f87c2022-ffe5-440d-b311-241d168ed9f7
  name: Minimize the admission of containers with allowPrivilegeEscalation
  order: 5.2.5
  prod_id: b562979b-d114-47ce-8f05-49800aedde59
- description: Do not generally permit containers to be run as the root user.
  dev_id: fbbe47ca-2be4-4d3c-945b-d3e8ad980165
  id: dfe2bb11-485d-4b62-8095-85b20f36721e
  name: Minimize the admission of root containers
  order: 5.2.6
  prod_id: e51df033-1502-4ea1-8a5c-c0bbc3a3ac12
- description: Do not generally permit containers with the potentially dangerous NET_RAW
    capability.
  dev_id: 0e361923-bc35-436b-ac47-5fa99684ab7a
  id: 9f680ad7-3c71-4cd5-9caa-78ade37e105e
  name: Minimize the admission of containers with the NET_RAW capability
  order: 5.2.7
  prod_id: 4717e46b-8406-43c4-9550-c2c7baef00ec
- description: Do not generally permit containers with capabilities assigned beyond
    the default set.
  dev_id: bcc22779-5bec-4475-8da8-e45d0e4be5bf
  id: a2f22fdb-ef78-4eca-afcb-17be22005068
  name: Minimize the admission of containers with added capabilities
  order: 5.2.8
  prod_id: 31dc899c-e25d-4348-b63e-2066671675da
- description: Do not generally permit containers with capabilities.
  dev_id: 4a5e7562-1f82-4cd2-a189-66a75feb14c2
  id: e44a52de-eddc-46c8-a98f-77d2091a885b
  name: Minimize the admission of containers with capabilities assigned
  order: 5.2.9
  prod_id: f28b470a-2e7e-412a-a77b-6cbb7514d24b
- description: Configure Image Provenance for your deployment.
  dev_id: 10b0bef3-fed2-401e-8723-42ea8d9f93cd
  id: 9e48e154-0f6d-4042-9365-c1e7e9240720
  name: Configure Image Provenance using ImagePolicyWebhook admission controller
  order: 5.5.1
  prod_id: 61f00e86-f0f2-472c-baff-d85b7f4e6b6e
- description: Enable `docker/default` seccomp profile in your pod definitions.
  dev_id: 590051c4-6770-40d6-806a-3b5e41209f49
  id: b6236650-118e-45c8-bd80-797f22551f6f
  name: Ensure that the seccomp profile is set to docker default in your pod definitions
  order: 5.7.2
  prod_id: 93f5053d-16ef-4dea-9c83-0a94b08385fb
- description: Apply Security Context to Your Pods and Containers.
  dev_id: c094fc18-0146-4c3c-9f2d-acadc6aa2fc1
  id: c1d3d2b1-f2a4-42d2-906e-f3b5eb2cd440
  name: Apply Security Context to Your Pods and Containers
  order: 5.7.3
  prod_id: 7d61ce18-1882-4773-8da7-d6dc02042201
- description: Kubernetes provides a default namespace, where objects are placed if
    no namespace is specified for them. Placing objects in this namespace makes pplication
    of RBAC and other controls more difficult.
  dev_id: 266e1930-bfe8-4b7c-968d-2dbef04e7363
  id: a52c1e8a-4dc4-4ace-8e21-fe4dc2bd1838
  name: The default namespace should not be used
  order: 5.7.4
  prod_id: 978b04a4-6a87-44ea-a531-2d955e7c6ef3
description: An objective, consensus-driven security guideline for the Kubernetes
  Server Software.
dev_id: 4b871f0e-a270-4500-83f7-32b928cc172f
id: b2666957-6c4c-463f-be10-2e66f1b7be20
name: CIS Benchmark
prod_id: f74e98f7-10d5-42de-a38f-4eec678052c8
rid: mglx_cis_benchmark
